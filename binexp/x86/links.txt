https://www.cs.virginia.edu/~evans/cs216/guides/x86.html
https://www.aldeid.com/wiki/X86-assembly/Instructions
https://stackoverflow.com/questions/22355436/how-to-compile-32-bit-apps-on-64-bit-ubuntu
https://stackoverflow.com/questions/25256919/and-operation-in-function-prologue
https://reverseengineering.stackexchange.com/questions/20826/how-does-the-x86-instruction-call-135b-x86-get-pc-thunk-ax-work
https://stackoverflow.com/questions/10810203/what-is-the-fs-gs-register-intended-for
https://stackoverflow.com/questions/1699748/what-is-the-difference-between-mov-and-lea
https://stackoverflow.com/questions/1658294/whats-the-purpose-of-the-lea-instruction
https://stackoverflow.com/questions/2136043/why-does-visual-studio-use-xchg-ax-ax
https://stackoverflow.com/questions/1102049/order-of-local-variable-allocation-on-the-stack
https://stackoverflow.com/questions/12234817/what-does-this-instruction-do-mov-gs0x14-eax/12234941
https://stackoverflow.com/questions/6679846/what-is-i686-get-pc-thunk-bx-why-do-we-need-this-call
https://stackoverflow.com/questions/2641489/what-is-a-thunk
https://research.csiro.au/tsblog/debugging-stories-stack-alignment-matters/
https://www.technovelty.org/linux/plt-and-got-the-key-to-code-sharing-and-dynamic-libraries.html
https://stackoverflow.com/questions/672461/what-is-stack-alignment
https://stackoverflow.com/questions/5858996/enter-and-leave-in-assembly
https://wiki.cdot.senecacollege.ca/wiki/X86_64_Register_and_Instruction_Quick_Start
https://en.wikipedia.org/wiki/X86#Addressing_modes
https://stackoverflow.com/questions/22214208/x86-assembly-why-is-ebx-preserved-in-calling-conventions
